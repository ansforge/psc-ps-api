openapi: 3.0.0
info:
  title: psc-api-maj-v2
  version: '1.0'
  description: API CRUD for Personnels et Structures de santé
  contact:
    email: superviseurs.psc@esante.gouv.fr
servers:
  - url: 'http://localhost:8080/api'
    description: local api server
tags:
  - name: ps
    description: ps
  - name: structure
    description: structure
  - name: toggle
    description: toggle
paths:
  '/ps':
    post:
      summary: 'Create new Ps'
      tags:
        - ps
      operationId: create-new-Ps
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Ps already exists
      description: Create a new Ps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ps'
        description: The Ps to be created
    put:
      summary: 'Update Ps'
      operationId: update-ps
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
      description: Update Ps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ps'
      tags:
        - ps
  '/ps/{psId}':
    parameters:
      - schema:
          type: string
        name: psId
        in: path
        required: true
    get:
      summary: 'Get Ps by id'
      tags:
        - ps
      operationId: get-ps-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ps'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
      description: get a Ps by one of its idNationalRef
    delete:
      summary: 'Delete Ps by id'
      tags:
        - ps
      operationId: delete-ps-by-id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
      description: Delete a PS by its id
  '/ps/force/{psId}':
    parameters:
      - schema:
          type: string
        name: psId
        in: path
        required: true
    delete:
      summary: 'Physical delete of Ps'
      tags:
        - ps
      operationId: force-delete-ps-by-id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
      description: completely delete Ps (not only deactivate it)
  '/structure':
    post:
      summary: 'Create new structure'
      tags:
        - structure
      operationId: create-new-structure
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
      description: Create a new structure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Structure'
    put:
      summary: 'Update structure'
      tags:
        - structure
      operationId: update-structure
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
      description: Update structure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Structure'
  '/structure/{structureId}':
    parameters:
      - schema:
          type: string
        name: structureId
        in: path
        required: true
    get:
      summary: 'Get structure by id'
      tags:
        - structure
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Structure'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
      operationId: get-structure-by-id
      description: Get structure by id
    delete:
      summary: 'Delete structure by id'
      tags:
        - structure
      operationId: delete-structure-by-structureId
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
      description: Delete structure by structureId
  /toggle:
    put:
      summary: 'toggle PsRef mapping'
      operationId: toggle-psref
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
        '409':
          description: Conflict
      description: Toggle PsRef mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsRef'
      tags:
        - toggle
components:
  schemas:
    Expertise:
      description: 'Expertise'
      type: object
      properties:
        expertiseId:
          type: string
        typeCode:
          type: string
        code:
          type: string
    Structure:
      description: 'Structure de Santé'
      type: object
      properties:
        siteSIRET:
          type: string
        siteSIREN:
          type: string
        siteFINESS:
          type: string
        legalEstablishmentFINESS:
          type: string
        structureTechnicalId:
          type: string
          minLength: 1
        legalCommercialName:
          type: string
        publicCommercialName:
          type: string
        recipientAdditionalInfo:
          type: string
        geoLocationAdditionalInfo:
          type: string
        streetNumber:
          type: string
        streetNumberRepetitionIndex:
          type: string
        streetCategoryCode:
          type: string
        streetLabel:
          type: string
        distributionMention:
          type: string
        cedexOffice:
          type: string
        postalCode:
          type: string
        communeCode:
          type: string
        countryCode:
          type: string
        phone:
          type: string
        phone2:
          type: string
        fax:
          type: string
        email:
          type: string
        departmentCode:
          type: string
        oldStructureId:
          type: string
        registrationAuthority:
          type: string
      required:
        - structureTechnicalId
    WorkSituation:
      description: ''
      type: object
      properties:
        situId:
          type: string
          minLength: 0
        modeCode:
          type: string
          minLength: 1
        activitySectorCode:
          type: string
          minLength: 0
        pharmacistTableSectionCode:
          type: string
          minLength: 0
        roleCode:
          type: string
          minLength: 0
        structures:
          type: array
          items:
            $ref: '#/components/schemas/Structure'
    Profession:
      description: 'Profession'
      type: object
      properties:
        exProId:
          type: string
        code:
          type: string
        categoryCode:
          type: string
        salutationCode:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        expertises:
          type: array
          items:
            $ref: '#/components/schemas/Expertise'
        workSituations:
          type: array
          items:
            $ref: '#/components/schemas/WorkSituation'
    PsRef:
      description: 'Mapping identifier to Ps'
      type: object
      properties:
        nationalIdRef:
          type: string
          minLength: 1
        nationalId:
          type: string
          minLength: 1
        activated:
          type: string
        deactivated:
          type: string
      required:
        - nationalIdRef
        - nationalId
    Ps:
      description: 'Professionnel de santé'
      type: object
      properties:
        idType:
          type: string
        id:
          type: string
        nationalId:
          type: string
          minLength: 1
        lastName:
          type: string
        firstName:
          type: string
        dateOfBirth:
          type: string
        birthAddressCode:
          type: string
        birthCountryCode:
          type: string
        birthAddress:
          type: string
        genderCode:
          type: string
        phone:
          type: string
        email:
          type: string
        salutationCode:
          type: string
        professions:
          type: array
          items:
            $ref: '#/components/schemas/Profession'
      required:
        - nationalId
    Error:
      title: Error
      type: object
      properties:
        httpStatus:
          type: number
        message:
          type: array
          items:
            type: string
